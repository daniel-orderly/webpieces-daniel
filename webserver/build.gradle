project.ext {
  stagingDirName = 'webpiecesServerBuilder'
  outputStagingDir = new File(buildDir, stagingDirName)
}

project('webpiecesServerBuilder:templateProject:TEMPLATEAPPNAME-prod') {
    sourceSets {
        test {
            resources {
                srcDirs = ["src/main/java"]
                includes = ["**/*.html"]
            }
        }
    }

    dependencies {
        compile project(':webserver:http-webserver')

        testCompile project(':webserver:http-webserver-test')
        testCompile deps['selenium']
    }
}

project('webpiecesServerBuilder:templateProject:TEMPLATEAPPNAME-dev') {
    dependencies {
        compile project(':webserver:http-webserver')
        compile project(':webserver:http-router-dev')
        compile project(':webserver:http-templating-dev')
        compile project(':webserver:webpiecesServerBuilder:templateProject:TEMPLATEAPPNAME-prod')
    }
}

task stageTemplate(type: Copy) {
    from '.'
    into buildDir
    include stagingDirName + '/**'
    exclude stagingDirName + '/output'
    exclude stagingDirName + '/.classpath'
    exclude stagingDirName + '/.project'
    exclude stagingDirName + '/.settings'
    exclude stagingDirName + '/build.gradle.template'
    exclude stagingDirName + '/templateProject/.classpath'
    exclude stagingDirName + '/templateProject/.project'
    exclude stagingDirName + '/templateProject/.settings'
    exclude stagingDirName + '/templateProject/output'
    exclude stagingDirName + '/templateProject/TEMPLATEAPPNAME-prod/output'
    exclude stagingDirName + '/templateProject/TEMPLATEAPPNAME-prod/bin'
    exclude stagingDirName + '/templateProject/TEMPLATEAPPNAME-prod/.classpath'
    exclude stagingDirName + '/templateProject/TEMPLATEAPPNAME-prod/.project'
    exclude stagingDirName + '/templateProject/TEMPLATEAPPNAME-prod/.settings'
    exclude stagingDirName + '/templateProject/TEMPLATEAPPNAME-dev/output'
    exclude stagingDirName + '/templateProject/TEMPLATEAPPNAME-dev/bin'
    exclude stagingDirName + '/templateProject/TEMPLATEAPPNAME-dev/.classpath'
    exclude stagingDirName + '/templateProject/TEMPLATEAPPNAME-dev/.project'
    exclude stagingDirName + '/templateProject/TEMPLATEAPPNAME-dev/.settings'
}

task copyGradleTemplate(type: Copy, dependsOn: 'stageTemplate') {
    from stagingDirName
    into outputStagingDir
    include 'build.gradle.template'
    rename { file -> 'build.gradle' }
    expand(version: version, title: 'ProjectInfo')
}

task zipGradleTemplate(type: Zip, dependsOn: 'copyGradleTemplate') {
   from buildDir
   include stagingDirName + "/**"
   baseName stagingDirName
}

assemble.dependsOn(['zipGradleTemplate'])
