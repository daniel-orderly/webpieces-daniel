buildscript {
    repositories {
       mavenCentral()
       //For testing and to be removed...
       maven {
         url uri('/tmp/myRepo/')
       }
    }
    dependencies {
        classpath 'org.webpieces:gradle-plugin-htmlcompiler:VERSION'
    }
}

apply plugin: 'application'
apply plugin: 'org.webpieces.templatecompiler'

sourceSets {
    //For testing, we need to put the html files on the classpath which are co-located with the controllers
    extraTest {
        resources {
            srcDirs = ["src/main/java"]
            includes = ["**/*.html", "**/*.tag"]
        }
    }
    test {
        resources {
            //This ADDS src/test/java/**/*.html and we still read in src/test/resources/**
            source extraTest.resources
            excludes = ["logback.xml"]
        }
    }
}

dependencies {
  //add maven dependencies here
  compile deps['web-webserver']

  //IF you add dependencies on other projects locally, you need to modify CLASSNAMEDevServer.java to include those
  //SOURCE paths(ie. *.java file paths not *.class files)) or it will not recompile that code as it changes

  //For testing, we need to bring in web-webserver-test such that we can debug in the IDE as this just ensures
  //we use the htmlcompiler on-demand rather than waiting for the gradle plugin to invoke the same code. For 
  //production jars, the html files are compiled to *.class files
  testCompile deps['web-webserver-test']
  testCompile deps['selenium']
}

mainClassName = "PACKAGE.CLASSNAMEServer"
applicationDefaultJvmArgs = ['JVM_ARGS_TRICK']

//Here, we must modify the start scripts to set user.dir property correctly
//so no matter where the script is run from, the user.dir will point to APPNAME directory
//it's too bad they don't do this one by default(they really should)..thank god for gradle flexibility
CreateStartScripts startScripts = project.startScripts
startScripts.with {
    doLast {
        //A slash in groovy allows us to not escape double quotes AND single quotes
        def slashString = /'"JVM_ARGS_TRICK"'/
        //for some reason, gradle prints '"jvm args"'  why?  I don't know but must swap quote and double quote
        unixScript.text = unixScript.text.replace(slashString, 
                   '"-Dlogback.configurationFile=config/logback.xml -Duser.dir=$APP_HOME"')
        windowsScript.text = windowsScript.text.replace('"JVM_ARGS_TRICK"', 
                   '"-Dlogback.configurationFile=config/logback.xml -Duser.dir=%APP_HOME%"')
    }
}

compileTemplateSetting {
  //Since the groovy plugin has no way of knowing about your custom tags, list them here or the compile will
  //fail (This catches mispellings and such so you don't release a broken app to production)
  customTags = [ "mytag", "anothertag" ]
}
