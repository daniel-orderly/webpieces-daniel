apply plugin: 'jacoco' //code coverage

sourceSets {
    test {
        resources {
            //This ADDS src/main/java/**/*.html and we still read in src/test/resources/**
            srcDirs = ["src/test/java", "src/test/resources"]
            excludes = ["**/*.java"]
        }
    }
}

//ok, this is the deal here.  JPA/hibernate made the decision to look for a persistence.xml file
//and scan for classes with @Entity in the directory OR jar with that xml file only
//maven(and I hate this) a long time ago separated src/main/java and src/main/resources but
//this screws tools in many situations like this one so this puts it back so the output is at
//least put to the same location
sourceSets.test.output.resourcesDir = sourceSets.test.output.classesDir
compileJava.doLast { tasks.processResources.execute() }

dependencies {
    compile deps['guice']
	compile project(':http:http-frontend2')
    compile project(':webserver:http-templating'), project(':webserver:http-router')

    testCompile project(':core:core-mock')
    testCompile project(':core:core-ddl')
    testCompile project(':webserver:http-webserver-test')
    testCompile project(':webserver:http-router-dev')
    testCompile project(':webserver-plugins:hibernate-plugin')
    testCompile project(':webserver-plugins:h2db-plugin')
	testCompile project(':webserver-plugins:json-jackson-plugin')
	
    testCompile deps['selenium']
}

uploadArchives.repositories.mavenDeployer.pom.project {
   description='The full webpieces server AS A library'
}

test {
    if (project.hasProperty('excludeSelenium')) {
        exclude '**/*Selenium*'
    }
}

